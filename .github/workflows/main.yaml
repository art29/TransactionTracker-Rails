name: Build Docker & Deploy

on:
  push:
    branches: [ main ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/transaction-tracker:latest

jobs:
  publish:
    name: publish image
    strategy:
      matrix:
        os: [ ubuntu-latest, self-hosted ]
        include:
          - os: ubuntu-latest
            arch: linux/amd64
            public-arch: amd64
          - os: self-hosted
            arch: linux/arm64/v8
            public-arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: ghcr.io
      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/${{ github.actor }}/transaction-tracker:latest-${{ matrix.public-arch }}
          platforms: ${{ matrix.arch }}
          push: true
  publish-manifest:
    name: publish image manifest
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: ghcr.io
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
        with:
          inputs: ${{ github.actor }}/transaction-tracker:latest
          images: ${{ github.actor }}/transaction-tracker:latest-amd64,transaction-tracker:latest-arm64
          push: true
  deploy:
    needs: [publish, publish-manifest]
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sh ${{ secrets.DEPLOY_SCRIPT }}"
      - name: cleanup
        run: rm -rf ~/.ssh
